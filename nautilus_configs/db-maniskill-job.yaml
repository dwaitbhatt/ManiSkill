apiVersion: batch/v1
kind: Job
metadata:
  name: db-maniskill-job-panda-tdmpc_baseline
spec:
  template:
    spec:
      containers:
      - name: gpu-container
        image: dhbhatt/maniskill-experiments:latest
        command: ["/bin/bash", "-c"]
        args: [
          # "git pull && \
          # python examples/baselines/sac/sac.py \
          #        --wandb-entity ucsd_erl --wandb-project-name maniskill_experiments \
          #        --exp_name PlaceCubeMatched6_xarm6_pandagripper_jv_sac_g95 \
          #        --save_model_dir /pers_vol/dwait/models \
          #        --env-id PlaceCube-v1 \
          #        --gamma 0.95 \
          #        --robot xarm6_pandagripper \
          #        --control_mode pd_joint_vel \
          #        --num-envs 128 \
          #        --training-freq 128 \
          #        --num-eval-steps 100 \
          #        --eval-freq 100_000 \
          #        --total-timesteps 10_000_000 \
          #        --wandb-video-freq 900_000 \
          #        --track \
          #   > /pers_vol/dwait/logs/$(date +%Y-%m-%d_%H-%M-%S)-sac.log"

          "git stash && git pull && \
          echo y | python examples/baselines/tdmpc2/train.py \
                  model_size=5 \
                  steps=5_000_000 \
                  seed=1 \
                  wandb_name=PickCube_xarm6_robotiq_tdmpc2 \
                  env_id=PickCube-v1 \
                  robot_uids=xarm6_robotiq \
                  control_mode=pd_joint_vel \
                  env_type=gpu \
                  num_envs=32 \
                  obs=state \ 
                  save_video_local=true \
                  wandb=true \
              > /pers_vol/dwait/logs/$(date +%Y-%m-%d_%H-%M-%S)-tdmpc.log"

          # "git pull && \
          # python examples/baselines/ppo/ppo.py \
          #         --env_id=PlaceCube-v1 \
          #         --robot_uids=xarm6_pandagripper \
          #         --control_mode=pd_joint_vel \
          #         --exp_name=PlaceCubeMatched6_xarm6_pandagripper_jv_ppo_g95 \
          #         --save_model_dir=/pers_vol/dwait/models \
          #         --num_envs=512 \
          #         --num_eval_envs=8 \
          #         --eval_freq=10 \
          #         --total_timesteps=50_000_000 \
          #         --num_steps=50 \
          #         --num_minibatches=32 \
          #         --num_eval_steps=50 \
          #         --gamma=0.95 \
          #         --update_epochs=4 \
          #         --track \
          #         --wandb_video_freq=50 \
          #     > /pers_vol/dwait/logs/$(date +%Y-%m-%d_%H-%M-%S)-ppo.log"
        ]
        env:
        - name: WANDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: wandb-secret
              key: api-key
        volumeMounts:
        - mountPath: /pers_vol
          name: db-cephfs-volume
        resources:
          limits:
            nvidia.com/gpu: "1"
            memory: "9G"
            cpu: "3"
          requests:
            nvidia.com/gpu: "1"
            memory: "8G"
            cpu: "2"
      affinity:
        # nodeAffinity:
        # nodeSelectorTerms:
        # - matchExpressions:
        #   - key: nvidia.com/gpu.product
        #     operator: In
        #     values:
        #     - "NVIDIA-A100-80GB-PCIe"
        #     - "NVIDIA-A100-SXM4-80GB"      
        #     - "NVIDIA-GeForce-RTX-4090"
        #     - "NVIDIA-GeForce-RTX-3090"
        #     - "NVIDIA-A40"
        #     - "NVIDIA-A10"
        #     - "Tesla-V100-SXM2-32GB"
        #     - "NVIDIA_TITAN_RTX"
        #     - "NVIDIA-RTX-A6000"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "ry-gpu-01.sdsc.optiputer.net"
                - "ry-gpu-02.sdsc.optiputer.net"
                - "ry-gpu-03.sdsc.optiputer.net"
                - "ry-gpu-04.sdsc.optiputer.net"
                - "ry-gpu-05.sdsc.optiputer.net"
                - "ry-gpu-06.sdsc.optiputer.net"
                - "ry-gpu-07.sdsc.optiputer.net"
                - "ry-gpu-08.sdsc.optiputer.net"
                - "ry-gpu-09.sdsc.optiputer.net"
                - "ry-gpu-10.sdsc.optiputer.net"
                - "ry-gpu-11.sdsc.optiputer.net"
                - "ry-gpu-12.sdsc.optiputer.net"
                - "ry-gpu-13.sdsc.optiputer.net"
                - "ry-gpu-14.sdsc.optiputer.net"
                - "ry-gpu-15.sdsc.optiputer.net"
                - "ry-gpu-16.sdsc.optiputer.net"
                - "k8s-3090-01.calit2.optiputer.net"
                - "k8s-4090-01.calit2.optiputer.net"
                - "k8s-4090-02.calit2.optiputer.net"
          - weight: 50
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "k8s-haosu-02.sdsc.optiputer.net"
                - "k8s-haosu-03.sdsc.optiputer.net"
                - "k8s-haosu-04.sdsc.optiputer.net"
                - "k8s-haosu-05.sdsc.optiputer.net"
                - "k8s-haosu-06.sdsc.optiputer.net"
                - "k8s-haosu-07.sdsc.optiputer.net"
                - "k8s-haosu-08.sdsc.optiputer.net"
                - "k8s-haosu-09.sdsc.optiputer.net"
                - "k8s-haosu-10.sdsc.optiputer.net"
                - "k8s-haosu-11.sdsc.optiputer.net"
                - "k8s-haosu-12.sdsc.optiputer.net"
                - "k8s-haosu-13.sdsc.optiputer.net"
                - "k8s-haosu-14.sdsc.optiputer.net"
                - "k8s-haosu-15.sdsc.optiputer.net"
                - "k8s-haosu-16.sdsc.optiputer.net"
                - "k8s-haosu-17.sdsc.optiputer.net"
                - "k8s-haosu-18.sdsc.optiputer.net"
                - "k8s-haosu-19.sdsc.optiputer.net"
                - "k8s-haosu-20.sdsc.optiputer.net"
                - "k8s-haosu-21.sdsc.optiputer.net"
                - "k8s-haosu-22.sdsc.optiputer.net"
                - "k8s-haosu-23.sdsc.optiputer.net"
          - weight: 80
            preference:
              matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - "NVIDIA-A100-80GB-PCIe"
                - "NVIDIA-A100-SXM4-80GB"
                - "NVIDIA-A100-80GB-PCIe-MIG-1g.10gb"
                - "NVIDIA-A100-PCIE-40GB"
                - "NVIDIA-RTX-A6000"
                - "NVIDIA-RTX-A5000"
                - "NVIDIA-GeForce-RTX-4090"
                - "NVIDIA-GeForce-RTX-4080"
                - "NVIDIA-GeForce-RTX-3090-Ti"
                - "NVIDIA-GeForce-RTX-3090"
                - "NVIDIA-GeForce-RTX-3080-Ti"
                - "NVIDIA-GeForce-RTX-3080"
          - weight: 60
            preference:
              matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - "NVIDIA-A40"
                - "Tesla-V100-SXM2-32GB"
                - "Tesla-V100-PCIE-16GB"
          - weight: 50
            preference:
              matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - "NVIDIA-TITAN-RTX"
                - "NVIDIA-GeForce-RTX-2080-Ti"
                - "NVIDIA-TITAN-Xp"
                - "NVIDIA-L40"
                - "NVIDIA-A10"
      restartPolicy: Never
      volumes:
        - name: db-cephfs-volume
          persistentVolumeClaim:
            claimName: db-cephfs-volume
